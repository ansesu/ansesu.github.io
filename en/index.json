[{"authors":["assunahara"],"categories":null,"content":"Currently a Ph.D. candidate in Physics at ComplexLab, State University of Maringá, Brazil\n","date":1629072000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1629072000,"objectID":"d10735df0444664a274d98fd2bf2d098","permalink":"https://ansesu.github.io/en/author/andre-s.-sunahara/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/en/author/andre-s.-sunahara/","section":"authors","summary":"Currently a Ph.D. candidate in Physics at ComplexLab, State University of Maringá, Brazil","tags":null,"title":"Andre S. Sunahara","type":"authors"},{"authors":null,"categories":null,"content":"","date":1633046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633046400,"objectID":"b13d40e4e16793b46c94904f35f7f515","permalink":"https://ansesu.github.io/en/news/fapesp-2021/","publishdate":"2021-10-01T00:00:00Z","relpermalink":"/en/news/fapesp-2021/","section":"news","summary":"Ao analisar a produção científica ao longo da carreira de mais de 6 mil pesquisadores brasileiros de 14 disciplinas, a equipe do físico Haroldo Ribeiro, da Universidade Estadual de Maringá, no Paraná, identificou padrões distintos de comportamento em relação à publicação de artigos.","tags":["Science of science","Fapesp"],"title":"Engrenagens do conhecimento (pt)","type":"news"},{"authors":["Andre S. Sunahara","Matjaz Perc","Haroldo V. Ribeiro"],"categories":null,"content":"","date":1629072000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629072000,"objectID":"f7a6212d95b8d4416e6de58fe6cdec6f","permalink":"https://ansesu.github.io/en/publication/2021/association-between-productivity-and-journal-impact-across-disciplines-and-career-age/","publishdate":"2021-08-16T00:00:00Z","relpermalink":"/en/publication/2021/association-between-productivity-and-journal-impact-across-disciplines-and-career-age/","section":"publication","summary":"The association between productivity and impact of scientific production is a long-standing debate in science that remains controversial and poorly understood. Here we present a large-scale analysis of the association between yearly publication numbers and average journal-impact metrics for the Brazilian scientific elite. We find this association to be discipline specific, career age dependent, and similar among researchers with outlier and nonoutlier performance. Outlier researchers either outperform in productivity or journal prestige, but they rarely do so in both categories. Nonoutliers also follow this trend and display negative correlations between productivity and journal prestige but with discipline-dependent intensity. Our research indicates that academics are averse to simultaneous changes in their productivity and journal-prestige levels over consecutive career years. We also find that career patterns concerning productivity and journal prestige are discipline-specific, having in common a raise of productivity with career age for most disciplines and a higher chance of outperforming in journal impact during early career stages.","tags":["Science of science","Productivity","Journal impact"],"title":"Association between productivity and journal impact across disciplines and career age","type":"publication"},{"authors":null,"categories":null,"content":"","date":1625702400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1625702400,"objectID":"8ba919c97644e470d04402ba91cfe315","permalink":"https://ansesu.github.io/en/news/conexao-covid/","publishdate":"2021-07-08T00:00:00Z","relpermalink":"/en/news/conexao-covid/","section":"news","summary":"Três físicos da UEM fundaram o Observatório COVID-19 Maringá, um site que surgiu da necessidade de registrar e analisar dados sobre a pandemia da Covid-19 na cidade.","tags":["COVID-19","Maringá"],"title":"A pandemia em dados: a Covid-19 decifrada para a sociedade (pt)","type":"news"},{"authors":["Andre"],"categories":[],"content":" According to Crameri et al., \u0026ldquo;The accurate representation of data is essential in science communication\u0026rdquo; [1]. Indeed, the choice of the most adequate type of visualization according to the characteristics of data is crucial in order to convey the results of scientific research. For example, the figure below shows the temporal evolution of the effective reproductive number $R(t)$ of COVID-19 in Maringá. By showing the values above one, indicating the accelerated pace of spreading, in red, and values below one, indicating the decelerated pace of spreading, in green, we can visually convey the pace of transmission of the virus.\nFigure 1: line plot with confidence interval and colors defined by a threshold. Values above this threshold are colored in red, while values below this threshold are colored in green. This visualization was inspired by the one in the website rt.live. The size of the elements is also crucial when representing data. The figure below shows the value of my artist and track listening streaks during 2022. The marker size varies with streak size, thus, visually conveying the size of each streak.\nArtist Track\nFigure 2: scatter plot with variable marker size according to the variable value (with buttons to alternate between categories). As mentioned before, the choice of the most adequate type of visualization is essential. The figure below shows the track volume of my most listened artists in 2022. In this context, it makes sense using a stream chart since it conveys the idea of volume.\nFigure 3: stream chart plot. In this post, I present some figures made by using the d3.js package and their respective tutorial, besides some resources that may help in learning general concepts of data visualization. The source code of the figures can be acessed in this page.\nLine plot Total COVID\nFigure 4: multipanel figure (with buttons to alternate between categories). Each panel shows a filled line plot. Bar plot Reload\nFigure 5: bar chart race. Moving average Figure 6: bar plot with moving average and adjacent timeline (with button for deactivation of the moving average). Geographic plot Cases Deaths\nFigure 7: map with color varying scale depending on the amplitude of the variable (with buttons to alternate between categories). Network Figura 8: force-directed graph. Resources - colorbrewer2\n- d3-time-format\n- SVG Attribute reference\n- D3 6.0 migration guide\n- How to Resize an SVG When the Window is Resized in d3.js\n- Scatterplot with tooltips\n- Multiline chart\n- Multiline chart with mouseover\n- Barplot\n- Barplot with button to change input\n- Barplot with clickable legend\n- Grouped barplot\n- Circular barplot\n- Bar chart race\n- Streamplot\n- Streamplot with transitions\n- Map\n- Force-directed graph\n- rt.live\nReferences [1] Scott, A. Interactive Data Visualization for the Web (O\u0026rsquo;Reilly Media, 2013)\n[2] Wilke, C. O. Fundamentals of Data Visualization (O\u0026rsquo;Reilly Media, 2019)\n[3] F. Crameri, G. E. Shephard, P. J. Heron, The misuse of colour in science communication. Nature Communications 11, 5444 (2020).\n","date":1622851200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1622851200,"objectID":"6cbcb5cc038e6e3a6ae8bcb18eda053b","permalink":"https://ansesu.github.io/en/post/d3-visualizations/","publishdate":"2021-06-05T00:00:00Z","relpermalink":"/en/post/d3-visualizations/","section":"post","summary":"According to Crameri et al., \u0026ldquo;The accurate representation of data is essential in science communication\u0026rdquo; [1]. Indeed, the choice of the most adequate type of visualization according to the characteristics of data is crucial in order to convey the results of scientific research.","tags":["Visualization","d3.js"],"title":"Data visualization with d3.js","type":"post"},{"authors":["Haroldo V. Ribeiro","Andre S. Sunahara","Jack Sutton","Matjaz Perc","Quentin S. Hanley"],"categories":null,"content":"","date":1600819200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600819200,"objectID":"f992302134da0ca08917c949f17e4de8","permalink":"https://ansesu.github.io/en/publication/2020/city-size-and-the-spreading-of-covid-19-in-brazil/","publishdate":"2020-09-23T00:00:00Z","relpermalink":"/en/publication/2020/city-size-and-the-spreading-of-covid-19-in-brazil/","section":"publication","summary":"The current outbreak of the coronavirus disease 2019 (COVID-19) is an unprecedented example of how fast an infectious disease can spread around the globe (especially in urban areas) and the enormous impact it causes on public health and socio-economic activities. Despite the recent surge of investigations about different aspects of the COVID-19 pandemic, we still know little about the effects of city size on the propagation of this disease in urban areas. Here we investigate how the number of cases and deaths by COVID-19 scale with the population of Brazilian cities. Our results indicate small towns are proportionally more affected by COVID-19 during the initial spread of the disease, such that the cumulative numbers of cases and deaths per capita initially decrease with population size. However, during the long-term course of the pandemic, this urban advantage vanishes and large cities start to exhibit higher incidence of cases and deaths, such that every 1% rise in population is associated with a 0.14% increase in the number of fatalities per capita after about four months since the first two daily deaths. We argue that these patterns may be related to the existence of proportionally more health infrastructure in the largest cities and a lower proportion of older adults in large urban areas. We also find the initial growth rate of cases and deaths to be higher in large cities; however, these growth rates tend to decrease in large cities and to increase in small ones over time.","tags":["COVID-19","Cities","Complex Systems"],"title":"City size and the spreading of COVID-19 in Brazil","type":"publication"},{"authors":["Andre"],"categories":[],"content":"Recently, I had to go back to some code from my master\u0026rsquo;s degree. I realized the code was bad written and hard to read. In order to solve this problem, I decided to study what are considered the best styling practices when coding in Python. This post is therefore kind of a cheatsheet for future reference. I intend to keep updating this page as I progress my research in that matter. I used the PEP 8 from the official website python.org as resource. The PEPs, Python Enhancement Proposals, are documents created with the purpose of instructing Python users regarding standards, new features, processes or environments [1]. Specifically, PEP 8 points out the style standards for Python users, in order the code to be easily readable [2]. So, here we go!\n(The code was copied and pasted from [2] although the commments and explanation may be different)\nTable of Contents Code layout Indentation Space or tab? Maximum line length Binary operators and line breaks Blank lines References Code layout Indentation Standard: 4 spaces per indentation level\nSome possible ways to write:\n# Opening delimiter alignment \u0026quot;(\u0026quot;. foo = long_function_name(var_one, var_two, var_three, var_four) # Addition of 4 spaces (an extra level of indentation) to distinguish arguments from the rest. def long_function_name( var_one, var_two, var_three, var_four): print(var_one) # Hanging indents should add a level. foo = long_function_name( var_one, var_two, var_three, var_four) However, in some cases, you may choose which option is more adequate to the situation:\n# Wrong. Further indentation required as indentation is not distinguishable. def long_function_name( var_one, var_two, var_three, var_four): print(var_one) # Correct. def long_function_name(var_one, var_two, var_three, var_four): print(var_one) Indentation: if-statement When the conditional part of an if-statement is too long, there may be a problem when breaking it into multiple lines:\nif (this_is_one_thing and that_is_another_thing): do_something() It is not possible to distinguish the statement and its content exactly because if ( contains four characters. Two possible options are:\n# Add a comment between lines. if (this_is_one_thing and that_is_another_thing): # Since both conditions are true, we can frobnicate. do_something() # Add some extra indentation on the conditional continuation line. if (this_is_one_thing and that_is_another_thing): do_something() Indentation: brace/bracket/parenthesis The brace/bracket/parenthesis on multiline constructs should line up with the first non-whitespace character of the last line of the list:\nmy_list = [ 1, 2, 3, 4, 5, 6, ] result = some_function_that_takes_arguments( 'a', 'b', 'c', 'd', 'e', 'f', ) or align with the first character of the line that starts the multiline construct:\nmy_list = [ 1, 2, 3, 4, 5, 6, ] result = some_function_that_takes_arguments( 'a', 'b', 'c', 'd', 'e', 'f', ) Space or tab? Standard: spaces are preferred over tabs.\nIf a code\u0026rsquo;s indentation default method is tab, you can use tab to match the current style. However, when starting a project, spaces (four) all the way!\nMaximum line length Standard: 79 characters maximum line width. For docstrings and comments, the maximum width should be up to 72 characters.\nI thought it was a little strange to limit line width up to 79 characters, but PEP 8 gives two good reasons for choosing this threshold (besides standardization):\nThis length may allow opening two codes side by side, which, in turn, is useful when reviewing them for example; Some text editors have default wrapping of up to 80 characters horizontally. Sizes bigger than that may disrupt the code visual structure, making it harder to read. Therefore, the maximum line width of 79 characters is a safe limit (by one character). However, for teams that prefer longer lines, and are working in a code exclusively/primarly maintained by them, if a consensus is established, there is no problem in increasing the line width up to 99 characters.\nTo help standardization, Jupyter Noteboook Extensions offer an tool called ruler that displays a vertical line indicating the character threshold as specified by the user. The figure below shows a piece of my code and the ruler tool enabled.\nCode example with the ruler tool from Jupyter Notebook Extensions. In order to break lines, it is recommended to encapsulate the expressions inside parenthesis, braces or brackets. When this option is not available, it is possible to use backslashes to break lines (although this is the least preferable option). For instance, when declaring a with or assert statement, implicit continuation is not possible, then we can use backslashes\nwith open('/path/to/some/file/you/want/to/read') as file_1, \\ open('/path/to/some/file/being/written', 'w') as file_2: file_2.write(file_1.read()) Binary operators and line breaks Standard: write binary operators in the beginning of each line.\nincome = (gross_wages + taxable_interest + (dividends - qualified_dividends) - ira_deduction - student_loan_interest) By doing so, it is possible to better understand the relation between variables. In the case shown above, we can see there are quantities that are added, which indicates some kind of credit, whereas other variables are subtracted, indicating a debt. The operator\u0026rsquo;s position being in the beginning of the line is therefore convenient since the operation performed (and, thus, its meaning) is explicitly displayed. Also, all operators are aligned, improving readability.\nBlank lines Standard:\nClass and function definitions start with two blank lines;\nMethod definitions inside classes are surrounded by one blank line;\nBlank lines can be used to separate groups of related functions;\nBlank lines can be used to separate logical sections in functions;\nPython understands the command Ctrl+L as a new blank line, although this input is understood as a page break in other tools.\nReferences [1] PEP 1 \u0026ndash; PEP Purpose and Guidelines.\n[2] PEP 8 \u0026ndash; Style Guide for Python Code.\n","date":1594857600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1595548800,"objectID":"ef250a05a08bc327f01d61fd482c2987","permalink":"https://ansesu.github.io/en/post/python-pep8/","publishdate":"2020-07-16T00:00:00Z","relpermalink":"/en/post/python-pep8/","section":"post","summary":"Recently, I had to go back to some code from my master\u0026rsquo;s degree. I realized the code was bad written and hard to read. In order to solve this problem, I decided to study what are considered the best styling practices when coding in Python.","tags":["Python","PEP8"],"title":"PEP8 - Best practices in styling for Python programming","type":"post"},{"authors":null,"categories":null,"content":"","date":1593734400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593734400,"objectID":"bdefae70dcd0936346064f2cf1971c6b","permalink":"https://ansesu.github.io/en/project/observatorio-covid/","publishdate":"2020-07-03T00:00:00Z","relpermalink":"/en/project/observatorio-covid/","section":"project","summary":"Keeping track of COVID-19 evolution in the city of Maringá, Brazil","tags":["COVID-19","Maringá"],"title":"Maringá COVID-19 Observatory","type":"project"},{"authors":null,"categories":null,"content":"Photo gallery aaaaaaa Video gallery Evening in Tokyo - 2014\nJamming in Sakae - Nagoya - 2014\nJamming in Sakae - Nagoya - 2014\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"665288c8761d48eb3366c37954243edc","permalink":"https://ansesu.github.io/en/gallery/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/en/gallery/","section":"","summary":"Photo gallery aaaaaaa Video gallery Evening in Tokyo - 2014\nJamming in Sakae - Nagoya - 2014\nJamming in Sakae - Nagoya - 2014","tags":null,"title":"Gallery","type":"page"}]